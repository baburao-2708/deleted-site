{"version":3,"sources":["App.js","index.js"],"names":["s","SpotifyWebApi","App","useStateValue","token","dispatch","useEffect","hash","getTokenFromResponse","window","location","_token","access_token","setAccessToken","type","getPlaylist","then","response","discover_weekly","getMyTopArtists","top_artists","spotify","getMe","user","getUserPlaylists","playlists","className","ReactDOM","render","StrictMode","StateProvider","initialState","reducer","document","getElementById","serviceWorker"],"mappings":"mXAQMA,EAAI,IAAIC,IA8DCC,MA5Df,WACE,MAA8BC,0BAA9B,mBAASC,EAAT,KAASA,MAASC,EAAlB,KAmDA,OAjDAC,qBAAU,WAER,IAAMC,EAAOC,iCACbC,OAAOC,SAASH,KAAO,GACvB,IAAII,EAASJ,EAAKK,aAEdD,IACFX,EAAEa,eAAeF,GAEjBN,EAAS,CACPS,KAAM,YACNV,MAAOO,IAGTX,EAAEe,YAAY,0BAA0BC,MAAK,SAACC,GAAD,OAC3CZ,EAAS,CACPS,KAAM,sBACNI,gBAAiBD,OAIrBjB,EAAEmB,kBAAkBH,MAAK,SAACC,GAAD,OACvBZ,EAAS,CACPS,KAAM,kBACNM,YAAaH,OAIjBZ,EAAS,CACPS,KAAM,cACNO,QAASrB,IAGXA,EAAEsB,QAAQN,MAAK,SAACO,GACdlB,EAAS,CACPS,KAAM,WACNS,YAIJvB,EAAEwB,mBAAmBR,MAAK,SAACS,GACzBpB,EAAS,CACPS,KAAM,gBACNW,oBAIL,CAACrB,EAAOC,IAGT,sBAAKqB,UAAU,MAAf,WACItB,GAAS,cAAC,IAAD,IACVA,GAAS,cAAC,IAAD,CAAQiB,QAASrB,Q,wBCzDjC2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,cAAD,CAAeC,aAAcA,eAAcC,QAASA,IAApD,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BC,iB","file":"static/js/main.8a3a3ce8.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from \"./StateProvider\";\nimport Player from \"./Player\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport \"./App.css\";\nimport Login from \"./Login\";\n\nconst s = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      s.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      s.getPlaylist(\"37i9dQZEVXcJZyENOWUFo7\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n\n      s.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: s,\n      });\n\n      s.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n\n      s.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n    }\n  }, [token, dispatch]);\n\n  return (\n    <div className=\"app\">\n      {!token && <Login />}\n      {token && <Player spotify={s} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}